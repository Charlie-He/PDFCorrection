{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'App',\n  data() {\n    return {\n      selectedFile: null,\n      isDragging: false,\n      isProcessing: false,\n      correctedFile: null,\n      errorMessage: '',\n      showPreviewModal: false,\n      compareMode: false,\n      previewTitle: '',\n      currentPage: 1,\n      originalPage: 1,\n      correctedPage: 1,\n      totalPages: 0,\n      pdfDoc: null,\n      correctedPdfDoc: null,\n      pdfLib: null\n    };\n  },\n  mounted() {\n    // 添加错误处理\n    window.addEventListener('unhandledrejection', event => {\n      if (event.reason && event.reason.message) {\n        if (event.reason.message.includes('pdf') || event.reason.message.includes('private member')) {\n          console.error('PDF相关未处理错误:', event.reason);\n          this.errorMessage = 'PDF处理错误: ' + event.reason.message;\n          // 特别处理私有成员错误\n          if (event.reason.message.includes('private member')) {\n            this.errorMessage = 'PDF引擎错误，请刷新页面重试';\n          }\n        }\n      }\n    });\n\n    // 添加一个全局重置PDF库的方法\n    window.resetPdfViewer = () => {\n      this.pdfLib = null;\n      this.pdfDoc = null;\n      this.correctedPdfDoc = null;\n      this.loadPdfJs();\n      console.log('PDF查看器已重置');\n    };\n    this.loadPdfJs();\n  },\n  methods: {\n    async loadPdfJs() {\n      try {\n        // 移除之前的PDF库（如果存在）\n        if (window['pdfjs-dist/build/pdf']) {\n          delete window['pdfjs-dist/build/pdf'];\n        }\n\n        // 使用ES6模块方式加载，更稳定\n        const pdfjsLib = await import('https://cdnjs.cloudflare.com/ajax/libs/pdf.js/3.4.120/pdf.min.mjs');\n        this.pdfLib = pdfjsLib.default;\n        if (this.pdfLib) {\n          this.pdfLib.GlobalWorkerOptions.workerSrc = 'https://cdnjs.cloudflare.com/ajax/libs/pdf.js/3.4.120/pdf.worker.min.js';\n        }\n      } catch (error) {\n        console.error('PDF.js 加载失败:', error);\n        // 降级到script标签加载方式\n        try {\n          const script = document.createElement('script');\n          script.src = 'https://cdnjs.cloudflare.com/ajax/libs/pdf.js/3.4.120/pdf.min.js';\n          script.onload = () => {\n            try {\n              this.pdfLib = window['pdfjs-dist/build/pdf'];\n              if (this.pdfLib) {\n                this.pdfLib.GlobalWorkerOptions.workerSrc = 'https://cdnjs.cloudflare.com/ajax/libs/pdf.js/3.4.120/pdf.worker.min.js';\n              }\n            } catch (e) {\n              console.error('PDF.js 初始化失败:', e);\n              this.errorMessage = 'PDF.js 初始化失败: ' + e.message;\n            }\n          };\n          script.onerror = error => {\n            console.error('PDF.js 加载失败:', error);\n            this.errorMessage = 'PDF.js 加载失败: 网络错误或资源不可用';\n          };\n          document.head.appendChild(script);\n        } catch (fallbackError) {\n          console.error('PDF.js 降级加载也失败:', fallbackError);\n          this.errorMessage = 'PDF.js 加载失败: ' + fallbackError.message;\n        }\n      }\n    },\n    handleFileSelect(event) {\n      const file = event.target.files[0];\n      if (file && file.type === 'application/pdf') {\n        this.selectedFile = file;\n        this.errorMessage = '';\n      } else {\n        this.errorMessage = '请选择PDF文件';\n      }\n    },\n    handleDrop(event) {\n      this.isDragging = false;\n      const file = event.dataTransfer.files[0];\n      if (file && file.type === 'application/pdf') {\n        this.selectedFile = file;\n        this.errorMessage = '';\n      } else {\n        this.errorMessage = '请选择PDF文件';\n      }\n    },\n    removeFile() {\n      this.selectedFile = null;\n      this.$refs.fileInput.value = '';\n    },\n    formatFileSize(bytes) {\n      if (bytes === 0) return '0 Bytes';\n      const k = 1024;\n      const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n      const i = Math.floor(Math.log(bytes) / Math.log(k));\n      return Math.round(bytes / Math.pow(k, i) * 100) / 100 + ' ' + sizes[i];\n    },\n    async showPreview() {\n      if (!this.pdfLib) {\n        this.errorMessage = 'PDF预览库加载中，请稍候...';\n        // 尝试重新加载\n        this.loadPdfJs();\n        return;\n      }\n      this.compareMode = false;\n      this.previewTitle = '原始PDF预览';\n      this.showPreviewModal = true;\n      this.currentPage = 1;\n      await this.$nextTick();\n      await this.loadPdfForPreview(this.selectedFile, 'single');\n    },\n    async showCompareView() {\n      if (!this.pdfLib) {\n        this.errorMessage = 'PDF预览库加载中，请稍候...';\n        // 尝试重新加载\n        this.loadPdfJs();\n        return;\n      }\n\n      // 确保已处理文件\n      if (!this.correctedFile) {\n        this.errorMessage = '请先处理文件再进行对比预览';\n        return;\n      }\n      this.compareMode = true;\n      this.previewTitle = '校正前后对比';\n      this.showPreviewModal = true;\n      this.originalPage = 1;\n      this.correctedPage = 1;\n      await this.$nextTick();\n      try {\n        await Promise.all([this.loadPdfForPreview(this.selectedFile, 'original'), this.loadCorrectedPdf()]);\n      } catch (error) {\n        console.error('对比预览加载失败:', error);\n        this.errorMessage = '对比预览加载失败: ' + error.message;\n      }\n    },\n    async loadPdfForPreview(file, canvasType) {\n      try {\n        // 检查文件是否存在\n        if (!file) {\n          throw new Error('未选择文件');\n        }\n        const arrayBuffer = await file.arrayBuffer();\n\n        // 检查数据是否有效\n        if (!arrayBuffer || arrayBuffer.byteLength === 0) {\n          throw new Error('文件数据为空');\n        }\n\n        // 确保PDF库已加载\n        if (!this.pdfLib || !this.pdfLib.getDocument) {\n          // 尝试重新加载\n          await new Promise(resolve => {\n            this.loadPdfJs();\n            setTimeout(resolve, 1000); // 等待库加载\n          });\n\n          // 再次检查\n          if (!this.pdfLib || !this.pdfLib.getDocument) {\n            throw new Error('PDF库加载失败，请刷新页面重试');\n          }\n        }\n\n        // 使用新的加载方式避免私有成员访问问题\n        const loadingTask = this.pdfLib.getDocument({\n          data: arrayBuffer,\n          // 添加更多选项以避免私有成员问题\n          verbosity: this.pdfLib.VerbosityLevel.ERRORS\n        });\n\n        // 添加加载超时\n        const timeoutPromise = new Promise((_, reject) => {\n          setTimeout(() => reject(new Error('PDF加载超时')), 10000);\n        });\n        const pdf = await Promise.race([loadingTask.promise, timeoutPromise]);\n        if (canvasType === 'original') {\n          // 清理之前的PDF对象\n          if (this.pdfDoc) {\n            try {\n              if (typeof this.pdfDoc.destroy === 'function') {\n                this.pdfDoc.destroy();\n              }\n            } catch (e) {\n              console.warn('清理之前的PDF对象时出错:', e);\n            }\n          }\n          this.pdfDoc = pdf;\n        } else if (canvasType === 'single') {\n          // 清理之前的PDF对象\n          if (this.pdfDoc) {\n            try {\n              if (typeof this.pdfDoc.destroy === 'function') {\n                this.pdfDoc.destroy();\n              }\n            } catch (e) {\n              console.warn('清理之前的PDF对象时出错:', e);\n            }\n          }\n          this.pdfDoc = pdf;\n        }\n        this.totalPages = pdf.numPages;\n        if (canvasType === 'original') {\n          await this.renderPage(this.originalPage, 'original');\n        } else if (canvasType === 'single') {\n          await this.renderPage(this.currentPage, 'single');\n        }\n      } catch (error) {\n        console.error('PDF加载失败:', error);\n        // 特别处理私有成员错误\n        if (error.message && error.message.includes('private member')) {\n          this.errorMessage = 'PDF加载引擎错误，请刷新页面重试';\n          // 尝试重新加载PDF库\n          this.loadPdfJs();\n        } else {\n          this.errorMessage = 'PDF加载失败: ' + (error.message || '未知错误');\n        }\n      }\n    },\n    async loadCorrectedPdf() {\n      try {\n        // 检查文件名\n        if (!this.correctedFile) {\n          throw new Error('校正后的文件名为空');\n        }\n\n        // 确保PDF库已加载\n        if (!this.pdfLib || !this.pdfLib.getDocument) {\n          // 尝试重新加载\n          await new Promise(resolve => {\n            this.loadPdfJs();\n            setTimeout(resolve, 1000); // 等待库加载\n          });\n\n          // 再次检查\n          if (!this.pdfLib || !this.pdfLib.getDocument) {\n            throw new Error('PDF库加载失败，请刷新页面重试');\n          }\n        }\n        const response = await axios.get(`http://localhost:8080/api/pdf/download/${this.correctedFile}`, {\n          responseType: 'arraybuffer',\n          timeout: 30000 // 30秒超时\n        });\n\n        // 检查响应数据\n        if (!response.data) {\n          throw new Error('服务器返回空数据');\n        }\n\n        // 使用新的加载方式避免私有成员访问问题\n        const loadingTask = this.pdfLib.getDocument({\n          data: response.data,\n          verbosity: this.pdfLib.VerbosityLevel.ERRORS\n        });\n\n        // 添加加载超时\n        const timeoutPromise = new Promise((_, reject) => {\n          setTimeout(() => reject(new Error('PDF加载超时')), 10000);\n        });\n        const pdf = await Promise.race([loadingTask.promise, timeoutPromise]);\n\n        // 清理之前的PDF对象\n        if (this.correctedPdfDoc) {\n          try {\n            if (typeof this.correctedPdfDoc.destroy === 'function') {\n              this.correctedPdfDoc.destroy();\n            }\n          } catch (e) {\n            console.warn('清理之前的校正PDF对象时出错:', e);\n          }\n        }\n        this.correctedPdfDoc = pdf;\n        await this.renderPage(this.correctedPage, 'corrected');\n      } catch (error) {\n        console.error('校正PDF加载失败:', error);\n        // 特别处理私有成员错误\n        if (error.message && error.message.includes('private member')) {\n          this.errorMessage = 'PDF加载引擎错误，请刷新页面重试';\n          // 尝试重新加载PDF库\n          this.loadPdfJs();\n        } else {\n          this.errorMessage = '校正PDF加载失败: ' + (error.message || '未知错误');\n        }\n      }\n    },\n    async renderPage(pageNum, canvasType) {\n      let pdf, canvas;\n      if (canvasType === 'original') {\n        pdf = this.pdfDoc;\n        canvas = this.$refs.originalCanvas;\n      } else if (canvasType === 'corrected') {\n        pdf = this.correctedPdfDoc;\n        canvas = this.$refs.correctedCanvas;\n      } else {\n        pdf = this.pdfDoc;\n        canvas = this.$refs.previewCanvas;\n      }\n      if (!pdf || !canvas) {\n        console.warn('缺少PDF文档或Canvas元素:', {\n          pdf: !!pdf,\n          canvas: !!canvas,\n          canvasType\n        });\n        return;\n      }\n      try {\n        // 确保PDF对象有效\n        if (typeof pdf.getPage !== 'function') {\n          throw new Error('PDF对象无效');\n        }\n\n        // 获取页面前检查页码\n        if (pageNum < 1 || pageNum > pdf.numPages) {\n          throw new Error(`页码超出范围: ${pageNum} (总页数: ${pdf.numPages})`);\n        }\n        const page = await pdf.getPage(pageNum);\n        const viewport = page.getViewport({\n          scale: 1.0\n        });\n        const context = canvas.getContext('2d');\n        canvas.height = viewport.height;\n        canvas.width = viewport.width;\n        context.clearRect(0, 0, canvas.width, canvas.height);\n\n        // 使用更安全的渲染方式\n        const renderContext = {\n          canvasContext: context,\n          viewport: viewport\n        };\n        const renderTask = page.render(renderContext);\n\n        // 添加超时机制\n        let timeoutId;\n        const timeoutPromise = new Promise((_, reject) => {\n          timeoutId = setTimeout(() => reject(new Error('渲染超时')), 10000);\n        });\n        await Promise.race([renderTask.promise, timeoutPromise]);\n        clearTimeout(timeoutId);\n      } catch (error) {\n        console.error('页面渲染失败:', error);\n        // 特别处理私有成员错误\n        if (error.message && error.message.includes('private member')) {\n          this.errorMessage = 'PDF渲染引擎错误，请刷新页面重试';\n          // 尝试重新加载PDF库\n          setTimeout(() => {\n            this.loadPdfJs();\n          }, 100);\n        } else if (error.message && error.message.includes('Destroyed')) {\n          this.errorMessage = 'PDF文档已被销毁，请重新打开文件';\n        } else {\n          this.errorMessage = '页面渲染失败: ' + (error.message || '未知错误');\n        }\n      }\n    },\n    async nextPage(pageType) {\n      if (pageType === 'single') {\n        if (this.currentPage < this.totalPages) {\n          this.currentPage++;\n          await this.renderPage(this.currentPage, 'single');\n        }\n      } else if (pageType === 'original') {\n        if (this.originalPage < this.totalPages) {\n          this.originalPage++;\n          await this.renderPage(this.originalPage, 'original');\n        }\n      } else if (pageType === 'corrected') {\n        if (this.correctedPage < this.totalPages) {\n          this.correctedPage++;\n          await this.renderPage(this.correctedPage, 'corrected');\n        }\n      }\n    },\n    async prevPage(pageType) {\n      if (pageType === 'single') {\n        if (this.currentPage > 1) {\n          this.currentPage--;\n          await this.renderPage(this.currentPage, 'single');\n        }\n      } else if (pageType === 'original') {\n        if (this.originalPage > 1) {\n          this.originalPage--;\n          await this.renderPage(this.originalPage, 'original');\n        }\n      } else if (pageType === 'corrected') {\n        if (this.correctedPage > 1) {\n          this.correctedPage--;\n          await this.renderPage(this.correctedPage, 'corrected');\n        }\n      }\n    },\n    closePreview() {\n      this.showPreviewModal = false;\n      // 正确清理PDF对象\n      if (this.pdfDoc) {\n        try {\n          // 释放PDF文档资源\n          if (this.pdfDoc.destroy && typeof this.pdfDoc.destroy === 'function') {\n            this.pdfDoc.destroy();\n          }\n        } catch (e) {\n          console.warn('释放PDF文档资源时出错:', e);\n        }\n        this.pdfDoc = null;\n      }\n      if (this.correctedPdfDoc) {\n        try {\n          // 释放校正PDF文档资源\n          if (this.correctedPdfDoc.destroy && typeof this.correctedPdfDoc.destroy === 'function') {\n            this.correctedPdfDoc.destroy();\n          }\n        } catch (e) {\n          console.warn('释放校正PDF文档资源时出错:', e);\n        }\n        this.correctedPdfDoc = null;\n      }\n\n      // 重置canvas\n      const canvases = [this.$refs.originalCanvas, this.$refs.correctedCanvas, this.$refs.previewCanvas];\n      canvases.forEach(canvas => {\n        if (canvas) {\n          const context = canvas.getContext('2d');\n          context.clearRect(0, 0, canvas.width, canvas.height);\n        }\n      });\n    },\n    async uploadAndCorrect() {\n      if (!this.selectedFile) {\n        this.errorMessage = '未选择文件';\n        return;\n      }\n      this.isProcessing = true;\n      this.errorMessage = '';\n      const formData = new FormData();\n      formData.append('file', this.selectedFile);\n      try {\n        const response = await axios.post('http://localhost:8080/api/pdf/upload', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        if (response.data.success) {\n          this.correctedFile = response.data.fileName;\n        } else {\n          this.errorMessage = response.data.message || '处理失败';\n        }\n      } catch (error) {\n        console.error('文件上传失败:', error);\n        this.errorMessage = '上传失败: ' + (error.response?.data?.message || error.message || '未知错误');\n      } finally {\n        this.isProcessing = false;\n      }\n    },\n    downloadFile() {\n      if (!this.correctedFile) return;\n      const url = `http://localhost:8080/api/pdf/download/${this.correctedFile}`;\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = this.correctedFile;\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    },\n    reset() {\n      this.selectedFile = null;\n      this.correctedFile = null;\n      this.errorMessage = '';\n      this.$refs.fileInput.value = '';\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","selectedFile","isDragging","isProcessing","correctedFile","errorMessage","showPreviewModal","compareMode","previewTitle","currentPage","originalPage","correctedPage","totalPages","pdfDoc","correctedPdfDoc","pdfLib","mounted","window","addEventListener","event","reason","message","includes","console","error","resetPdfViewer","loadPdfJs","log","methods","pdfjsLib","default","GlobalWorkerOptions","workerSrc","script","document","createElement","src","onload","e","onerror","head","appendChild","fallbackError","handleFileSelect","file","target","files","type","handleDrop","dataTransfer","removeFile","$refs","fileInput","value","formatFileSize","bytes","k","sizes","i","Math","floor","round","pow","showPreview","$nextTick","loadPdfForPreview","showCompareView","Promise","all","loadCorrectedPdf","canvasType","Error","arrayBuffer","byteLength","getDocument","resolve","setTimeout","loadingTask","verbosity","VerbosityLevel","ERRORS","timeoutPromise","_","reject","pdf","race","promise","destroy","warn","numPages","renderPage","response","get","responseType","timeout","pageNum","canvas","originalCanvas","correctedCanvas","previewCanvas","getPage","page","viewport","getViewport","scale","context","getContext","height","width","clearRect","renderContext","canvasContext","renderTask","render","timeoutId","clearTimeout","nextPage","pageType","prevPage","closePreview","canvases","forEach","uploadAndCorrect","formData","FormData","append","post","headers","success","fileName","downloadFile","url","link","href","download","body","click","removeChild","reset"],"sources":["D:\\MyFile\\MyProject\\PDFCorrection\\frontend\\src\\App.vue"],"sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <div class=\"container\">\r\n      <h1 class=\"title\">📄 PDF 页面倾斜校正系统</h1>\r\n\r\n      <div class=\"upload-section\">\r\n        <div\r\n            class=\"upload-area\"\r\n            :class=\"{ 'drag-over': isDragging }\"\r\n            @drop.prevent=\"handleDrop\"\r\n            @dragover.prevent=\"isDragging = true\"\r\n            @dragleave=\"isDragging = false\"\r\n        >\r\n          <input\r\n              type=\"file\"\r\n              ref=\"fileInput\"\r\n              accept=\".pdf\"\r\n              @change=\"handleFileSelect\"\r\n              style=\"display: none\"\r\n          >\r\n\r\n          <div v-if=\"!selectedFile\" class=\"upload-prompt\">\r\n            <svg class=\"upload-icon\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\r\n              <path d=\"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\"></path>\r\n              <polyline points=\"17 8 12 3 7 8\"></polyline>\r\n              <line x1=\"12\" y1=\"3\" x2=\"12\" y2=\"15\"></line>\r\n            </svg>\r\n            <p>拖拽PDF文件到此处，或者</p>\r\n            <button class=\"btn-primary\" @click=\"$refs.fileInput.click()\">\r\n              选择文件\r\n            </button>\r\n          </div>\r\n\r\n          <div v-else class=\"file-info\">\r\n            <svg class=\"file-icon\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\r\n              <path d=\"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z\"></path>\r\n              <polyline points=\"14 2 14 8 20 8\"></polyline>\r\n            </svg>\r\n            <div class=\"file-details\">\r\n              <p class=\"file-name\">{{ selectedFile.name }}</p>\r\n              <p class=\"file-size\">{{ formatFileSize(selectedFile.size) }}</p>\r\n            </div>\r\n            <button class=\"btn-remove\" @click=\"removeFile\" :disabled=\"isProcessing\">\r\n              ✕\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div v-if=\"selectedFile && !isProcessing && !correctedFile\" class=\"action-buttons\">\r\n          <button class=\"btn-preview\" @click=\"showPreview\">\r\n            <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\r\n              <path d=\"M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z\"></path>\r\n              <circle cx=\"12\" cy=\"12\" r=\"3\"></circle>\r\n            </svg>\r\n            预览原文件\r\n          </button>\r\n          <button class=\"btn-process\" @click=\"uploadAndCorrect\">\r\n            开始校正\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div v-if=\"isProcessing\" class=\"processing\">\r\n        <div class=\"spinner\"></div>\r\n        <p>正在处理中，请稍候...</p>\r\n        <p class=\"processing-tip\">正在分析 {{ totalPages }} 个页面...</p>\r\n      </div>\r\n\r\n      <div v-if=\"errorMessage\" class=\"error-message\">\r\n        <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\r\n          <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\r\n          <line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"12\"></line>\r\n          <line x1=\"12\" y1=\"16\" x2=\"12.01\" y2=\"16\"></line>\r\n        </svg>\r\n        {{ errorMessage }}\r\n      </div>\r\n\r\n      <div v-if=\"correctedFile\" class=\"success-section\">\r\n        <div class=\"success-message\">\r\n          <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\r\n            <path d=\"M22 11.08V12a10 10 0 1 1-5.93-9.14\"></path>\r\n            <polyline points=\"22 4 12 14.01 9 11.01\"></polyline>\r\n          </svg>\r\n          <span>校正完成！</span>\r\n        </div>\r\n\r\n        <div class=\"action-buttons\">\r\n          <button class=\"btn-preview\" @click=\"showCompareView\">\r\n            <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\r\n              <rect x=\"3\" y=\"3\" width=\"7\" height=\"7\"></rect>\r\n              <rect x=\"14\" y=\"3\" width=\"7\" height=\"7\"></rect>\r\n              <rect x=\"14\" y=\"14\" width=\"7\" height=\"7\"></rect>\r\n              <rect x=\"3\" y=\"14\" width=\"7\" height=\"7\"></rect>\r\n            </svg>\r\n            对比预览\r\n          </button>\r\n          <button class=\"btn-download\" @click=\"downloadFile\">\r\n            <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\r\n              <path d=\"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\"></path>\r\n              <polyline points=\"7 10 12 15 17 10\"></polyline>\r\n              <line x1=\"12\" y1=\"15\" x2=\"12\" y2=\"3\"></line>\r\n            </svg>\r\n            下载校正后的PDF\r\n          </button>\r\n        </div>\r\n\r\n        <button class=\"btn-secondary\" @click=\"reset\">\r\n          处理新文件\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- PDF预览模态框 -->\r\n    <div v-if=\"showPreviewModal\" class=\"modal-overlay\" @click=\"closePreview\">\r\n      <div class=\"modal-content\" @click.stop>\r\n        <div class=\"modal-header\">\r\n          <h2>{{ previewTitle }}</h2>\r\n          <button class=\"btn-close\" @click=\"closePreview\">✕</button>\r\n        </div>\r\n\r\n        <div v-if=\"compareMode\" class=\"compare-container\">\r\n          <div class=\"preview-panel\">\r\n            <h3>原始文件</h3>\r\n            <div class=\"pdf-viewer\">\r\n              <canvas ref=\"originalCanvas\"></canvas>\r\n            </div>\r\n            <div class=\"page-controls\">\r\n              <button @click=\"prevPage('original')\" :disabled=\"originalPage === 1\">\r\n                ← 上一页\r\n              </button>\r\n              <span>{{ originalPage }} / {{ totalPages }}</span>\r\n              <button @click=\"nextPage('original')\" :disabled=\"originalPage === totalPages\">\r\n                下一页 →\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"preview-panel\">\r\n            <h3>校正后文件</h3>\r\n            <div class=\"pdf-viewer\">\r\n              <canvas ref=\"correctedCanvas\"></canvas>\r\n            </div>\r\n            <div class=\"page-controls\">\r\n              <button @click=\"prevPage('corrected')\" :disabled=\"correctedPage === 1\">\r\n                ← 上一页\r\n              </button>\r\n              <span>{{ correctedPage }} / {{ totalPages }}</span>\r\n              <button @click=\"nextPage('corrected')\" :disabled=\"correctedPage === totalPages\">\r\n                下一页 →\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div v-else class=\"single-preview\">\r\n          <div class=\"pdf-viewer\">\r\n            <canvas ref=\"previewCanvas\"></canvas>\r\n          </div>\r\n          <div class=\"page-controls\">\r\n            <button @click=\"prevPage('single')\" :disabled=\"currentPage === 1\">\r\n              ← 上一页\r\n            </button>\r\n            <span>{{ currentPage }} / {{ totalPages }}</span>\r\n            <button @click=\"nextPage('single')\" :disabled=\"currentPage === totalPages\">\r\n              下一页 →\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'App',\r\n  data() {\r\n    return {\r\n      selectedFile: null,\r\n      isDragging: false,\r\n      isProcessing: false,\r\n      correctedFile: null,\r\n      errorMessage: '',\r\n      showPreviewModal: false,\r\n      compareMode: false,\r\n      previewTitle: '',\r\n      currentPage: 1,\r\n      originalPage: 1,\r\n      correctedPage: 1,\r\n      totalPages: 0,\r\n      pdfDoc: null,\r\n      correctedPdfDoc: null,\r\n      pdfLib: null\r\n    };\r\n  },\r\n  mounted() {\r\n    // 添加错误处理\r\n    window.addEventListener('unhandledrejection', event => {\r\n      if (event.reason && event.reason.message) {\r\n        if (event.reason.message.includes('pdf') || event.reason.message.includes('private member')) {\r\n          console.error('PDF相关未处理错误:', event.reason);\r\n          this.errorMessage = 'PDF处理错误: ' + event.reason.message;\r\n          // 特别处理私有成员错误\r\n          if (event.reason.message.includes('private member')) {\r\n            this.errorMessage = 'PDF引擎错误，请刷新页面重试';\r\n          }\r\n        }\r\n      }\r\n    });\r\n    \r\n    // 添加一个全局重置PDF库的方法\r\n    window.resetPdfViewer = () => {\r\n      this.pdfLib = null;\r\n      this.pdfDoc = null;\r\n      this.correctedPdfDoc = null;\r\n      this.loadPdfJs();\r\n      console.log('PDF查看器已重置');\r\n    };\r\n    \r\n    this.loadPdfJs();\r\n  },\r\n  methods: {\r\n    async loadPdfJs() {\r\n      try {\r\n        // 移除之前的PDF库（如果存在）\r\n        if (window['pdfjs-dist/build/pdf']) {\r\n          delete window['pdfjs-dist/build/pdf'];\r\n        }\r\n        \r\n        // 使用ES6模块方式加载，更稳定\r\n        const pdfjsLib = await import('https://cdnjs.cloudflare.com/ajax/libs/pdf.js/3.4.120/pdf.min.mjs');\r\n        this.pdfLib = pdfjsLib.default;\r\n        \r\n        if (this.pdfLib) {\r\n          this.pdfLib.GlobalWorkerOptions.workerSrc = \r\n            'https://cdnjs.cloudflare.com/ajax/libs/pdf.js/3.4.120/pdf.worker.min.js';\r\n        }\r\n      } catch (error) {\r\n        console.error('PDF.js 加载失败:', error);\r\n        // 降级到script标签加载方式\r\n        try {\r\n          const script = document.createElement('script');\r\n          script.src = 'https://cdnjs.cloudflare.com/ajax/libs/pdf.js/3.4.120/pdf.min.js';\r\n          script.onload = () => {\r\n            try {\r\n              this.pdfLib = window['pdfjs-dist/build/pdf'];\r\n              if (this.pdfLib) {\r\n                this.pdfLib.GlobalWorkerOptions.workerSrc =\r\n                  'https://cdnjs.cloudflare.com/ajax/libs/pdf.js/3.4.120/pdf.worker.min.js';\r\n              }\r\n            } catch (e) {\r\n              console.error('PDF.js 初始化失败:', e);\r\n              this.errorMessage = 'PDF.js 初始化失败: ' + e.message;\r\n            }\r\n          };\r\n          script.onerror = (error) => {\r\n            console.error('PDF.js 加载失败:', error);\r\n            this.errorMessage = 'PDF.js 加载失败: 网络错误或资源不可用';\r\n          };\r\n          document.head.appendChild(script);\r\n        } catch (fallbackError) {\r\n          console.error('PDF.js 降级加载也失败:', fallbackError);\r\n          this.errorMessage = 'PDF.js 加载失败: ' + fallbackError.message;\r\n        }\r\n      }\r\n    },\r\n\r\n    handleFileSelect(event) {\r\n      const file = event.target.files[0];\r\n      if (file && file.type === 'application/pdf') {\r\n        this.selectedFile = file;\r\n        this.errorMessage = '';\r\n      } else {\r\n        this.errorMessage = '请选择PDF文件';\r\n      }\r\n    },\r\n\r\n    handleDrop(event) {\r\n      this.isDragging = false;\r\n      const file = event.dataTransfer.files[0];\r\n      if (file && file.type === 'application/pdf') {\r\n        this.selectedFile = file;\r\n        this.errorMessage = '';\r\n      } else {\r\n        this.errorMessage = '请选择PDF文件';\r\n      }\r\n    },\r\n\r\n    removeFile() {\r\n      this.selectedFile = null;\r\n      this.$refs.fileInput.value = '';\r\n    },\r\n\r\n    formatFileSize(bytes) {\r\n      if (bytes === 0) return '0 Bytes';\r\n      const k = 1024;\r\n      const sizes = ['Bytes', 'KB', 'MB', 'GB'];\r\n      const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n      return Math.round(bytes / Math.pow(k, i) * 100) / 100 + ' ' + sizes[i];\r\n    },\r\n\r\n    async showPreview() {\r\n      if (!this.pdfLib) {\r\n        this.errorMessage = 'PDF预览库加载中，请稍候...';\r\n        // 尝试重新加载\r\n        this.loadPdfJs();\r\n        return;\r\n      }\r\n\r\n      this.compareMode = false;\r\n      this.previewTitle = '原始PDF预览';\r\n      this.showPreviewModal = true;\r\n      this.currentPage = 1;\r\n\r\n      await this.$nextTick();\r\n      await this.loadPdfForPreview(this.selectedFile, 'single');\r\n    },\r\n\r\n    async showCompareView() {\r\n      if (!this.pdfLib) {\r\n        this.errorMessage = 'PDF预览库加载中，请稍候...';\r\n        // 尝试重新加载\r\n        this.loadPdfJs();\r\n        return;\r\n      }\r\n\r\n      // 确保已处理文件\r\n      if (!this.correctedFile) {\r\n        this.errorMessage = '请先处理文件再进行对比预览';\r\n        return;\r\n      }\r\n\r\n      this.compareMode = true;\r\n      this.previewTitle = '校正前后对比';\r\n      this.showPreviewModal = true;\r\n      this.originalPage = 1;\r\n      this.correctedPage = 1;\r\n\r\n      await this.$nextTick();\r\n\r\n      try {\r\n        await Promise.all([\r\n          this.loadPdfForPreview(this.selectedFile, 'original'),\r\n          this.loadCorrectedPdf()\r\n        ]);\r\n      } catch (error) {\r\n        console.error('对比预览加载失败:', error);\r\n        this.errorMessage = '对比预览加载失败: ' + error.message;\r\n      }\r\n    },\r\n\r\n    async loadPdfForPreview(file, canvasType) {\r\n      try {\r\n        // 检查文件是否存在\r\n        if (!file) {\r\n          throw new Error('未选择文件');\r\n        }\r\n        \r\n        const arrayBuffer = await file.arrayBuffer();\r\n        \r\n        // 检查数据是否有效\r\n        if (!arrayBuffer || arrayBuffer.byteLength === 0) {\r\n          throw new Error('文件数据为空');\r\n        }\r\n        \r\n        // 确保PDF库已加载\r\n        if (!this.pdfLib || !this.pdfLib.getDocument) {\r\n          // 尝试重新加载\r\n          await new Promise(resolve => {\r\n            this.loadPdfJs();\r\n            setTimeout(resolve, 1000); // 等待库加载\r\n          });\r\n          \r\n          // 再次检查\r\n          if (!this.pdfLib || !this.pdfLib.getDocument) {\r\n            throw new Error('PDF库加载失败，请刷新页面重试');\r\n          }\r\n        }\r\n        \r\n        // 使用新的加载方式避免私有成员访问问题\r\n        const loadingTask = this.pdfLib.getDocument({ \r\n          data: arrayBuffer,\r\n          // 添加更多选项以避免私有成员问题\r\n          verbosity: this.pdfLib.VerbosityLevel.ERRORS\r\n        });\r\n        \r\n        // 添加加载超时\r\n        const timeoutPromise = new Promise((_, reject) => {\r\n          setTimeout(() => reject(new Error('PDF加载超时')), 10000);\r\n        });\r\n        \r\n        const pdf = await Promise.race([loadingTask.promise, timeoutPromise]);\r\n\r\n        if (canvasType === 'original') {\r\n          // 清理之前的PDF对象\r\n          if (this.pdfDoc) {\r\n            try {\r\n              if (typeof this.pdfDoc.destroy === 'function') {\r\n                this.pdfDoc.destroy();\r\n              }\r\n            } catch (e) {\r\n              console.warn('清理之前的PDF对象时出错:', e);\r\n            }\r\n          }\r\n          this.pdfDoc = pdf;\r\n        } else if (canvasType === 'single') {\r\n          // 清理之前的PDF对象\r\n          if (this.pdfDoc) {\r\n            try {\r\n              if (typeof this.pdfDoc.destroy === 'function') {\r\n                this.pdfDoc.destroy();\r\n              }\r\n            } catch (e) {\r\n              console.warn('清理之前的PDF对象时出错:', e);\r\n            }\r\n          }\r\n          this.pdfDoc = pdf;\r\n        }\r\n\r\n        this.totalPages = pdf.numPages;\r\n\r\n        if (canvasType === 'original') {\r\n          await this.renderPage(this.originalPage, 'original');\r\n        } else if (canvasType === 'single') {\r\n          await this.renderPage(this.currentPage, 'single');\r\n        }\r\n      } catch (error) {\r\n        console.error('PDF加载失败:', error);\r\n        // 特别处理私有成员错误\r\n        if (error.message && error.message.includes('private member')) {\r\n          this.errorMessage = 'PDF加载引擎错误，请刷新页面重试';\r\n          // 尝试重新加载PDF库\r\n          this.loadPdfJs();\r\n        } else {\r\n          this.errorMessage = 'PDF加载失败: ' + (error.message || '未知错误');\r\n        }\r\n      }\r\n    },\r\n\r\n    async loadCorrectedPdf() {\r\n      try {\r\n        // 检查文件名\r\n        if (!this.correctedFile) {\r\n          throw new Error('校正后的文件名为空');\r\n        }\r\n        \r\n        // 确保PDF库已加载\r\n        if (!this.pdfLib || !this.pdfLib.getDocument) {\r\n          // 尝试重新加载\r\n          await new Promise(resolve => {\r\n            this.loadPdfJs();\r\n            setTimeout(resolve, 1000); // 等待库加载\r\n          });\r\n          \r\n          // 再次检查\r\n          if (!this.pdfLib || !this.pdfLib.getDocument) {\r\n            throw new Error('PDF库加载失败，请刷新页面重试');\r\n          }\r\n        }\r\n\r\n        const response = await axios.get(\r\n            `http://localhost:8080/api/pdf/download/${this.correctedFile}`,\r\n            { \r\n              responseType: 'arraybuffer',\r\n              timeout: 30000 // 30秒超时\r\n            }\r\n        );\r\n\r\n        // 检查响应数据\r\n        if (!response.data) {\r\n          throw new Error('服务器返回空数据');\r\n        }\r\n\r\n        // 使用新的加载方式避免私有成员访问问题\r\n        const loadingTask = this.pdfLib.getDocument({ \r\n          data: response.data,\r\n          verbosity: this.pdfLib.VerbosityLevel.ERRORS\r\n        });\r\n        \r\n        // 添加加载超时\r\n        const timeoutPromise = new Promise((_, reject) => {\r\n          setTimeout(() => reject(new Error('PDF加载超时')), 10000);\r\n        });\r\n        \r\n        const pdf = await Promise.race([loadingTask.promise, timeoutPromise]);\r\n        \r\n        // 清理之前的PDF对象\r\n        if (this.correctedPdfDoc) {\r\n          try {\r\n            if (typeof this.correctedPdfDoc.destroy === 'function') {\r\n              this.correctedPdfDoc.destroy();\r\n            }\r\n          } catch (e) {\r\n            console.warn('清理之前的校正PDF对象时出错:', e);\r\n          }\r\n        }\r\n        \r\n        this.correctedPdfDoc = pdf;\r\n\r\n        await this.renderPage(this.correctedPage, 'corrected');\r\n      } catch (error) {\r\n        console.error('校正PDF加载失败:', error);\r\n        // 特别处理私有成员错误\r\n        if (error.message && error.message.includes('private member')) {\r\n          this.errorMessage = 'PDF加载引擎错误，请刷新页面重试';\r\n          // 尝试重新加载PDF库\r\n          this.loadPdfJs();\r\n        } else {\r\n          this.errorMessage = '校正PDF加载失败: ' + (error.message || '未知错误');\r\n        }\r\n      }\r\n    },\r\n\r\n    async renderPage(pageNum, canvasType) {\r\n      let pdf, canvas;\r\n\r\n      if (canvasType === 'original') {\r\n        pdf = this.pdfDoc;\r\n        canvas = this.$refs.originalCanvas;\r\n      } else if (canvasType === 'corrected') {\r\n        pdf = this.correctedPdfDoc;\r\n        canvas = this.$refs.correctedCanvas;\r\n      } else {\r\n        pdf = this.pdfDoc;\r\n        canvas = this.$refs.previewCanvas;\r\n      }\r\n\r\n      if (!pdf || !canvas) {\r\n        console.warn('缺少PDF文档或Canvas元素:', { pdf: !!pdf, canvas: !!canvas, canvasType });\r\n        return;\r\n      }\r\n\r\n      try {\r\n        // 确保PDF对象有效\r\n        if (typeof pdf.getPage !== 'function') {\r\n          throw new Error('PDF对象无效');\r\n        }\r\n        \r\n        // 获取页面前检查页码\r\n        if (pageNum < 1 || pageNum > pdf.numPages) {\r\n          throw new Error(`页码超出范围: ${pageNum} (总页数: ${pdf.numPages})`);\r\n        }\r\n        \r\n        const page = await pdf.getPage(pageNum);\r\n        const viewport = page.getViewport({ scale: 1.0 });\r\n\r\n        const context = canvas.getContext('2d');\r\n        canvas.height = viewport.height;\r\n        canvas.width = viewport.width;\r\n        context.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n        // 使用更安全的渲染方式\r\n        const renderContext = {\r\n          canvasContext: context,\r\n          viewport: viewport\r\n        };\r\n        \r\n        const renderTask = page.render(renderContext);\r\n        \r\n        // 添加超时机制\r\n        let timeoutId;\r\n        const timeoutPromise = new Promise((_, reject) => {\r\n          timeoutId = setTimeout(() => reject(new Error('渲染超时')), 10000);\r\n        });\r\n        \r\n        await Promise.race([renderTask.promise, timeoutPromise]);\r\n        clearTimeout(timeoutId);\r\n        \r\n      } catch (error) {\r\n        console.error('页面渲染失败:', error);\r\n        // 特别处理私有成员错误\r\n        if (error.message && error.message.includes('private member')) {\r\n          this.errorMessage = 'PDF渲染引擎错误，请刷新页面重试';\r\n          // 尝试重新加载PDF库\r\n          setTimeout(() => {\r\n            this.loadPdfJs();\r\n          }, 100);\r\n        } else if (error.message && error.message.includes('Destroyed')) {\r\n          this.errorMessage = 'PDF文档已被销毁，请重新打开文件';\r\n        } else {\r\n          this.errorMessage = '页面渲染失败: ' + (error.message || '未知错误');\r\n        }\r\n      }\r\n    },\r\n\r\n    async nextPage(pageType) {\r\n      if (pageType === 'single') {\r\n        if (this.currentPage < this.totalPages) {\r\n          this.currentPage++;\r\n          await this.renderPage(this.currentPage, 'single');\r\n        }\r\n      } else if (pageType === 'original') {\r\n        if (this.originalPage < this.totalPages) {\r\n          this.originalPage++;\r\n          await this.renderPage(this.originalPage, 'original');\r\n        }\r\n      } else if (pageType === 'corrected') {\r\n        if (this.correctedPage < this.totalPages) {\r\n          this.correctedPage++;\r\n          await this.renderPage(this.correctedPage, 'corrected');\r\n        }\r\n      }\r\n    },\r\n\r\n    async prevPage(pageType) {\r\n      if (pageType === 'single') {\r\n        if (this.currentPage > 1) {\r\n          this.currentPage--;\r\n          await this.renderPage(this.currentPage, 'single');\r\n        }\r\n      } else if (pageType === 'original') {\r\n        if (this.originalPage > 1) {\r\n          this.originalPage--;\r\n          await this.renderPage(this.originalPage, 'original');\r\n        }\r\n      } else if (pageType === 'corrected') {\r\n        if (this.correctedPage > 1) {\r\n          this.correctedPage--;\r\n          await this.renderPage(this.correctedPage, 'corrected');\r\n        }\r\n      }\r\n    },\r\n\r\n    closePreview() {\r\n      this.showPreviewModal = false;\r\n      // 正确清理PDF对象\r\n      if (this.pdfDoc) {\r\n        try {\r\n          // 释放PDF文档资源\r\n          if (this.pdfDoc.destroy && typeof this.pdfDoc.destroy === 'function') {\r\n            this.pdfDoc.destroy();\r\n          }\r\n        } catch (e) {\r\n          console.warn('释放PDF文档资源时出错:', e);\r\n        }\r\n        this.pdfDoc = null;\r\n      }\r\n      \r\n      if (this.correctedPdfDoc) {\r\n        try {\r\n          // 释放校正PDF文档资源\r\n          if (this.correctedPdfDoc.destroy && typeof this.correctedPdfDoc.destroy === 'function') {\r\n            this.correctedPdfDoc.destroy();\r\n          }\r\n        } catch (e) {\r\n          console.warn('释放校正PDF文档资源时出错:', e);\r\n        }\r\n        this.correctedPdfDoc = null;\r\n      }\r\n      \r\n      // 重置canvas\r\n      const canvases = [this.$refs.originalCanvas, this.$refs.correctedCanvas, this.$refs.previewCanvas];\r\n      canvases.forEach(canvas => {\r\n        if (canvas) {\r\n          const context = canvas.getContext('2d');\r\n          context.clearRect(0, 0, canvas.width, canvas.height);\r\n        }\r\n      });\r\n    },\r\n\r\n    async uploadAndCorrect() {\r\n      if (!this.selectedFile) {\r\n        this.errorMessage = '未选择文件';\r\n        return;\r\n      }\r\n\r\n      this.isProcessing = true;\r\n      this.errorMessage = '';\r\n\r\n      const formData = new FormData();\r\n      formData.append('file', this.selectedFile);\r\n\r\n      try {\r\n        const response = await axios.post('http://localhost:8080/api/pdf/upload', formData, {\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data'\r\n          }\r\n        });\r\n\r\n        if (response.data.success) {\r\n          this.correctedFile = response.data.fileName;\r\n        } else {\r\n          this.errorMessage = response.data.message || '处理失败';\r\n        }\r\n      } catch (error) {\r\n        console.error('文件上传失败:', error);\r\n        this.errorMessage = '上传失败: ' + (error.response?.data?.message || error.message || '未知错误');\r\n      } finally {\r\n        this.isProcessing = false;\r\n      }\r\n    },\r\n\r\n    downloadFile() {\r\n      if (!this.correctedFile) return;\r\n\r\n      const url = `http://localhost:8080/api/pdf/download/${this.correctedFile}`;\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.download = this.correctedFile;\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n    },\r\n\r\n    reset() {\r\n      this.selectedFile = null;\r\n      this.correctedFile = null;\r\n      this.errorMessage = '';\r\n      this.$refs.fileInput.value = '';\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n* {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\n#app {\r\n  min-height: 100vh;\r\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n  padding: 40px 20px;\r\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, sans-serif;\r\n}\r\n\r\n.container {\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.title {\r\n  text-align: center;\r\n  color: white;\r\n  font-size: 2rem;\r\n  margin-bottom: 40px;\r\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.upload-section {\r\n  background: white;\r\n  border-radius: 12px;\r\n  padding: 30px;\r\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.upload-area {\r\n  border: 2px dashed #ddd;\r\n  border-radius: 8px;\r\n  padding: 40px;\r\n  text-align: center;\r\n  transition: all 0.3s;\r\n  background: #fafafa;\r\n}\r\n\r\n.upload-area.drag-over {\r\n  border-color: #667eea;\r\n  background: #f0f4ff;\r\n}\r\n\r\n.upload-prompt {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 20px;\r\n}\r\n\r\n.upload-icon {\r\n  width: 64px;\r\n  height: 64px;\r\n  color: #667eea;\r\n  stroke-width: 2;\r\n}\r\n\r\n.upload-prompt p {\r\n  color: #666;\r\n  font-size: 1rem;\r\n}\r\n\r\n.btn-primary {\r\n  background: #667eea;\r\n  color: white;\r\n  border: none;\r\n  padding: 12px 30px;\r\n  border-radius: 6px;\r\n  font-size: 1rem;\r\n  cursor: pointer;\r\n  transition: all 0.3s;\r\n}\r\n\r\n.btn-primary:hover {\r\n  background: #5568d3;\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 4px 12px rgba(102, 126, 234, 0.4);\r\n}\r\n\r\n.file-info {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 15px;\r\n  background: white;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n}\r\n\r\n.file-icon {\r\n  width: 40px;\r\n  height: 40px;\r\n  color: #667eea;\r\n  stroke-width: 2;\r\n  flex-shrink: 0;\r\n}\r\n\r\n.file-details {\r\n  flex: 1;\r\n  text-align: left;\r\n}\r\n\r\n.file-name {\r\n  font-weight: 600;\r\n  color: #333;\r\n  margin-bottom: 5px;\r\n  word-break: break-all;\r\n}\r\n\r\n.file-size {\r\n  color: #999;\r\n  font-size: 0.875rem;\r\n}\r\n\r\n.btn-remove {\r\n  width: 32px;\r\n  height: 32px;\r\n  border-radius: 50%;\r\n  border: none;\r\n  background: #ff4444;\r\n  color: white;\r\n  cursor: pointer;\r\n  font-size: 1.2rem;\r\n  transition: all 0.3s;\r\n  flex-shrink: 0;\r\n}\r\n\r\n.btn-remove:hover:not(:disabled) {\r\n  background: #cc0000;\r\n  transform: scale(1.1);\r\n}\r\n\r\n.btn-remove:disabled {\r\n  opacity: 0.5;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.action-buttons {\r\n  display: flex;\r\n  gap: 15px;\r\n  margin-top: 20px;\r\n}\r\n\r\n.btn-preview {\r\n  flex: 1;\r\n  background: #8b5cf6;\r\n  color: white;\r\n  border: none;\r\n  padding: 12px;\r\n  border-radius: 8px;\r\n  font-size: 1rem;\r\n  font-weight: 600;\r\n  cursor: pointer;\r\n  transition: all 0.3s;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 8px;\r\n}\r\n\r\n.btn-preview svg {\r\n  width: 20px;\r\n  height: 20px;\r\n  stroke-width: 2;\r\n}\r\n\r\n.btn-preview:hover {\r\n  background: #7c3aed;\r\n  transform: translateY(-2px);\r\n}\r\n\r\n.btn-process {\r\n  flex: 1;\r\n  background: #10b981;\r\n  color: white;\r\n  border: none;\r\n  padding: 12px;\r\n  border-radius: 8px;\r\n  font-size: 1rem;\r\n  font-weight: 600;\r\n  cursor: pointer;\r\n  transition: all 0.3s;\r\n}\r\n\r\n.btn-process:hover {\r\n  background: #059669;\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 4px 12px rgba(16, 185, 129, 0.4);\r\n}\r\n\r\n.processing {\r\n  margin-top: 30px;\r\n  text-align: center;\r\n  color: white;\r\n}\r\n\r\n.spinner {\r\n  width: 50px;\r\n  height: 50px;\r\n  border: 4px solid rgba(255, 255, 255, 0.3);\r\n  border-top-color: white;\r\n  border-radius: 50%;\r\n  margin: 0 auto 20px;\r\n  animation: spin 1s linear infinite;\r\n}\r\n\r\n@keyframes spin {\r\n  to { transform: rotate(360deg); }\r\n}\r\n\r\n.processing p {\r\n  font-size: 1.1rem;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.processing-tip {\r\n  font-size: 0.9rem;\r\n  opacity: 0.8;\r\n}\r\n\r\n.error-message {\r\n  margin-top: 20px;\r\n  padding: 15px;\r\n  background: #fee;\r\n  border: 1px solid #fcc;\r\n  border-radius: 8px;\r\n  color: #c33;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n}\r\n\r\n.error-message svg {\r\n  width: 24px;\r\n  height: 24px;\r\n  flex-shrink: 0;\r\n  stroke-width: 2;\r\n}\r\n\r\n.success-section {\r\n  margin-top: 30px;\r\n  background: white;\r\n  border-radius: 12px;\r\n  padding: 30px;\r\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.success-message {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 10px;\r\n  color: #10b981;\r\n  font-size: 1.2rem;\r\n  font-weight: 600;\r\n  margin-bottom: 25px;\r\n}\r\n\r\n.success-message svg {\r\n  width: 32px;\r\n  height: 32px;\r\n  stroke-width: 2;\r\n}\r\n\r\n.btn-download {\r\n  flex: 1;\r\n  background: #667eea;\r\n  color: white;\r\n  border: none;\r\n  padding: 15px;\r\n  border-radius: 8px;\r\n  font-size: 1.1rem;\r\n  font-weight: 600;\r\n  cursor: pointer;\r\n  transition: all 0.3s;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 10px;\r\n}\r\n\r\n.btn-download svg {\r\n  width: 24px;\r\n  height: 24px;\r\n  stroke-width: 2;\r\n}\r\n\r\n.btn-download:hover {\r\n  background: #5568d3;\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 4px 12px rgba(102, 126, 234, 0.4);\r\n}\r\n\r\n.btn-secondary {\r\n  width: 100%;\r\n  background: #6b7280;\r\n  color: white;\r\n  border: none;\r\n  padding: 12px;\r\n  border-radius: 8px;\r\n  font-size: 1rem;\r\n  cursor: pointer;\r\n  transition: all 0.3s;\r\n  margin-top: 15px;\r\n}\r\n\r\n.btn-secondary:hover {\r\n  background: #4b5563;\r\n}\r\n\r\n/* 模态框样式 */\r\n.modal-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background: rgba(0, 0, 0, 0.8);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  z-index: 1000;\r\n  padding: 20px;\r\n}\r\n\r\n.modal-content {\r\n  background: white;\r\n  border-radius: 12px;\r\n  max-width: 95vw;\r\n  max-height: 90vh;\r\n  overflow: auto;\r\n  box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);\r\n}\r\n\r\n.modal-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 20px 30px;\r\n  border-bottom: 1px solid #eee;\r\n  position: sticky;\r\n  top: 0;\r\n  background: white;\r\n  z-index: 10;\r\n}\r\n\r\n.modal-header h2 {\r\n  margin: 0;\r\n  color: #333;\r\n  font-size: 1.5rem;\r\n}\r\n\r\n.btn-close {\r\n  width: 36px;\r\n  height: 36px;\r\n  border-radius: 50%;\r\n  border: none;\r\n  background: #f3f4f6;\r\n  color: #666;\r\n  cursor: pointer;\r\n  font-size: 1.5rem;\r\n  transition: all 0.3s;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.btn-close:hover {\r\n  background: #e5e7eb;\r\n  color: #333;\r\n}\r\n\r\n.compare-container {\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  gap: 20px;\r\n  padding: 30px;\r\n}\r\n\r\n.preview-panel h3 {\r\n  text-align: center;\r\n  color: #667eea;\r\n  margin-bottom: 15px;\r\n  font-size: 1.2rem;\r\n}\r\n\r\n.single-preview {\r\n  padding: 30px;\r\n}\r\n\r\n.pdf-viewer {\r\n  background: #f9fafb;\r\n  border-radius: 8px;\r\n  padding: 20px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 500px;\r\n  overflow: auto;\r\n}\r\n\r\n.pdf-viewer canvas {\r\n  max-width: 100%;\r\n  height: auto;\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n  border-radius: 4px;\r\n}\r\n\r\n.page-controls {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 20px;\r\n  margin-top: 20px;\r\n}\r\n\r\n.page-controls button {\r\n  padding: 8px 16px;\r\n  background: #667eea;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  transition: all 0.3s;\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.page-controls button:hover:not(:disabled) {\r\n  background: #5568d3;\r\n}\r\n\r\n.page-controls button:disabled {\r\n  background: #d1d5db;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.page-controls span {\r\n  font-weight: 600;\r\n  color: #333;\r\n  min-width: 80px;\r\n  text-align: center;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .compare-container {\r\n    grid-template-columns: 1fr;\r\n  }\r\n   npm run serve\r\n\r\n  .action-buttons {\r\n    flex-direction: column;\r\n  }\r\n\r\n  .modal-content {\r\n    max-width: 100%;\r\n    max-height: 100%;\r\n    border-radius: 0;\r\n  }\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}